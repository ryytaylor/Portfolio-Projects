Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

	SELECT COUNT(*) 
	FROM table;

i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	\

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

	SELECT COUNT(DISTINCT(key))
	FROM table

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = id:10000, business)id: 8090, user_id: 9581
vi. Checkin = business_id: 493
vii. Photo = id: 10000, business_id: 6493
viii. Tip = user_id: 537, business_id:3979
ix. User = id: 10000
x. Friend = user_id: 11
xi. Elite_years = user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	SQL code used to arrive at answer:

	SELECT COUNT(*) 
	FROM user
	WHERE id IS NULL OR,
		name IS NULL OR,
		review_count IS NULL OR,
		yelping_since IS NULL OR,
		useful IS NULL OR,
		funny IS NULL OR,
		cool IS NULL OR,
		fans IS NULL OR,
		average_stars IS NULL OR,
		compliment_hot IS NULL OR,
		compliment_more IS NULL OR,
		compliment_profile IS NULL OR,
		compliment_cute IS NULL OR,
		compliment_list IS NULL OR,
		compliment_note IS NULL OR,
		compliment_plain IS NULL OR,
		compliment_cool IS NULL OR,
		compliment_funny IS NULL OR,
		compliment_writer IS NULL OR,
		compliment_photos IS NULL


4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:
	
	SELECT MIN(column)
	FROM table

	SELECT MAX(column) 
	FROM table

	SELECT AVG(column) 
	FROM table

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg: 3.6549\
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144\
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414\
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.995
		

5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

		SELECT
		city,
		SUM(review_count) AS reviews
		FROM business
		GROUP BY city ORDER BY reviews DESC
	

6. Find the distribution of star ratings to the business in the following cities:

i. Avon

	SQL code used to arrive at answer:
		
	SELECT 
	stars,
	SUM(review_count) AS count
	FROM business
	WHERE city == 'Avon'
	GROUP BY stars


ii. Beachwood

	SQL code used to arrive at answer:

	SELECT 
	stars,
	SUM(review_count) AS count
	FROM business
	WHERE city == 'Beechwood'
	GROUP BY stars

7. Find the top 3 users based on their total number of reviews:

	SQL code used to arrive at answer:
	
	SELECT
	id,
	name,
	review_count
	FROM user
	ORDER BY review_count DESC LIMIT 3
	
8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

	There does seem to be a correlation between the number of reviews and the number of fans. However, the amount of time
	the user has spent on Yelp is another contributing factor.
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Love 1780 // Hate 232

	SQL code used to arrive at answer:

	SELECT COUNT(*)
	FROM review
	WHERE text LIKE '%love%'

	= 1780

	SELECT COUNT(*)
	FROM review
	WHERE text LIKE \'%hate%'

	= 232

10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT
	Id,
	name,
	fans
	FROM user
	ORDER BY fans DESC LIMIT 10


Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

i. Do the two groups you chose to analyze have a different distribution of hours?

		The group with less hours seems to be the 4-5 star group, in comparison to the 2-3 star group.

ii. Do the two groups you chose to analyze have a different number of reviews?

		Yes, one of the 4-5 star groups has many more reviews than the 2-3 star group.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
		
		No, each business has a different zip code.

	SQL code used for analysis:

	SELECT b.name,
	b.review_count,
	h.hours,
	postal_code,
	CASE
		WHEN hours LIKE '%monday%' THEN 1
		WHEN hours LIKE '%tuesday%' THEN 2
		WHEN hours LIKE '%wednesday%' THEN 3
		WHEN hours LIKE '%thursday%' THEN 4
		WHEN hours LIKE '%friday%' THEN 5
		WHEN hours LIKE '%saturday%' THEN 6
		WHEN hours LIKE '%sunday%' THEN 7
	END AS order,
	CASE
		WHEN b.stars BETWEEN 2 and 3 THEN '2-3 stars'
		WHEN b.stars BETWEEN 4 and 5 THEN '4-5 stars'
	END AS star_rating
	FROM business b
	INNER JOIN hours h ON b.id = h.business_id
	INNER JOIN category c ON c.business_id = b.id
	WHERE (b.city == 'Las Vegas'
	AND c.category LIKE 'shopping')
	AND (b.stars BETWEEN 2 and 3
	OR b.stars BETWEEN 4 and 5)
	GROUP BY stars, order ORDER BY ord, star_rating

2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.

	i. Difference 1:
	
	The businesses that are open have more reviews (on average) than the businesses that are closed.
		
		Open: 31.757 (AVG)
		Closed: 23.198 (AVG)
		
	ii. Difference 2:
	
	The average star rating for businesses that are open is higher than the ratings for businesses that are closed. 
		
		Open: 3.679 (AVG)
		Closed: 3.520 (AVG)
		 
	SQL code used for analysis:

	SELECT 
	COUNT(DISTINCT(id)),
	AVG(review_count),
	SUM(review_count),
	AVG(stars),
	is_open
	FROM business GROUP BY is_open

3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.
	
i. Indicate the type of analysis you chose to do:
	
	I would like to predict whether a business will remain open or closed. 
         	
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

	In order to make this prediction, we'll need to analyze data that will provide insights
	on the relevant factors that will help the businesses stay open. This will include:
		Number of Reviews
		Star rating of the business
		Hours Open
		Location of the business (latitude/longitude, city, state, postal code, and address)
	Different attributes will allow us to distinguish between the categories/types of 
	businesses included in the analysis. The is_open attribute will allow us to determine which
	businesses are open compared to those that have permanently closed. I chose this data
	since it will provide insights into the question at hand, and will allow for an interesting analysis.

iii. Provide the SQL code you used to create your final dataset:
		
	SELECT b.id,
		b.name,
		b.address,
		b.city,
		b.state,
		b.postal_code,
		b.latitude,
		b.longitude,
		b.review_count,
		b.stars,
		MAX(CASE
			WHEN h.hours LIKE '%monday% THEN TRIM(h.hours, '%MondayTuesWednesThursFriSatSun | %') 
			END AS monday_hours,
		MAX(CASE
			WHEN h.hours LIKE '%tuesday% THEN TRIM(h.hours, '%MondayTuesWednesThursFriSatSun | %') 
			END AS tuesday_hours,
		MAX(CASE
			WHEN h.hours LIKE '%wednesday% THEN TRIM(h.hours, '%MondayTuesWednesThursFriSatSun | %') 
			END AS wednesday_hours,
		MAX(CASE
			WHEN h.hours LIKE '%thursday% THEN TRIM(h.hours, '%MondayTuesWednesThursFriSatSun | %') 
			END AS thursday_hours,
		MAX(CASE
			WHEN h.hours LIKE '%friday% THEN TRIM(h.hours, '%MondayTuesWednesThursFriSatSun | %')
			END AS friday_hours,
		MAX(CASE
			WHEN h.hours LIKE '%saturday% THEN TRIM(h.hours, '%MondayTuesWednesThursFriSatSun | %') 
			END AS saturday_hours,
		MAX(CASE
			WHEN h.hours LIKE '%sunday% THEN TRIM(h.hours, '%MondayTuesWednesThursFriSatSun | %') 
			END AS sunday_hours,
		GROUP_CONCAT(DISTINCT(c.category)) AS categories,
		GROUP_CONCAT(DISTINCT(a.name)) AS attributes,
		b.is_open
		FROM business b
		INNER JOIN hours h ON b.id = h.business_id
		INNER JOIN category c ON b.id = c.business_id
		INNER JOIN attribute a ON b.id = a.business_id
		GROUP BY b.id}
